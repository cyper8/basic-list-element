{"version":3,"file":"SelectionChangedEvent.js","sourceRoot":"","sources":["../../src/SelectionChangedEvent.ts"],"names":[],"mappings":"AAUA;;;;;;;;GAQG;AACH,MAAM,OAAO,qBACX,SAAQ,WAAmC;IAK3C;;;;;;;;;OASG;IACH,YACE,SAAiC,EACjC,UAA2B;QACzB,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;KACf;QAED,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE;YAChC,GAAG,OAAO;YACV,MAAM,EAAE,SAAS;SACyB,CAAC,CAAC;IAChD,CAAC;;AAvBM,0BAAI,GAAwB,mBAAmB,CAAC","sourcesContent":["export type SelectionChangedDetail = {\n  elements: Element[];\n  index: number[];\n};\n\nexport interface BLESelectionChangedEvent\n  extends CustomEvent<SelectionChangedDetail> {\n  detail: SelectionChangedDetail;\n}\n\n/**\n * SelectionChangedEvent fires when selected items of basic-list-element\n * have been changed\n *\n * @export\n * @class SelectionChangedEvent\n * @extends {CustomEvent<SelectionChangedDetail>}\n * @implements {BLESelectionChangedEvent}\n */\nexport class SelectionChangedEvent\n  extends CustomEvent<SelectionChangedDetail>\n  implements BLESelectionChangedEvent\n{\n  static type: 'selection-changed' = 'selection-changed';\n\n  /**\n   * Creates an instance of SelectionChangedEvent\n   *\n   * @param {SelectionChangedDetail} selection - object that holds changed elements and their indexes\n   * @param {CustomEventInit} [options = {\n   *       bubbles: true,\n   *       composed: true,\n   *     }] - other options of the SelectionChangedEvent\n   * @memberof SelectionChangedEvent\n   */\n  constructor(\n    selection: SelectionChangedDetail,\n    options: CustomEventInit = {\n      bubbles: true,\n      composed: true,\n    }\n  ) {\n    super(SelectionChangedEvent.type, {\n      ...options,\n      detail: selection,\n    } as CustomEventInit<SelectionChangedDetail>);\n  }\n}\n"]}