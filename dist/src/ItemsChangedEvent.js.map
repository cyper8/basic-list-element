{"version":3,"file":"ItemsChangedEvent.js","sourceRoot":"","sources":["../../src/ItemsChangedEvent.ts"],"names":[],"mappings":"AAQA;;;;;;;GAOG;AACH,MAAM,OAAO,iBACX,SAAQ,WAA+B;IAKvC;;;;;OAKG;IACH,YACE,KAAyB,EACzB,UAA2B,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;QAE5D,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,EAAE,GAAG,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/D,CAAC;;AAbM,sBAAI,GAAoB,eAAe,CAAC","sourcesContent":["export type ItemsChangedDetail = {\n  items: Element[];\n};\n\nexport interface BLEItemsChangedEvent extends CustomEvent<ItemsChangedDetail> {\n  detail: ItemsChangedDetail;\n}\n\n/**\n * Event that fires when basic-list-element items have been changed\n *\n * @export\n * @class ItemsChangedEvent\n * @extends {CustomEvent<ItemsChangedDetail>}\n * @implements {BLEItemsChangedEvent}\n */\nexport class ItemsChangedEvent\n  extends CustomEvent<ItemsChangedDetail>\n  implements BLEItemsChangedEvent\n{\n  static type: 'items-changed' = 'items-changed';\n\n  /**\n   *Creates an instance of ItemsChangedEvent\n   * @param {ItemsChangedDetail} items - object that has 'items' entry with array of all Elements of a list\n   * @param {CustomEventInit} [options={ bubbles: true, composed: true }] - other options of Event\n   * @memberof ItemsChangedEvent\n   */\n  constructor(\n    items: ItemsChangedDetail,\n    options: CustomEventInit = { bubbles: true, composed: true }\n  ) {\n    super(ItemsChangedEvent.type, { ...options, detail: items });\n  }\n}\n"]}