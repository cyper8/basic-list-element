{"version":3,"file":"basic-list-element.test.js","sourceRoot":"","sources":["../../test/basic-list-element.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, expect } from '@open-wc/testing';\nimport { html, TemplateResult } from 'lit';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { SpyOn } from 'dom-event-spy';\n\nimport { BasicListElement } from '../src/BasicListElement.js';\nimport '../basic-list-element.js';\n\nimport { SelectionChangedEvent } from '../src/SelectionEvent.js';\nimport { ItemsChangedEvent } from '../src/ItemsChangedEvent.js';\n\ndescribe('BasicListElement', () => {\n  it('can have label', async () => {\n    const el = await fixture<BasicListElement>(\n      html`<basic-list-element label=\"Header\"></basic-list-element>`\n    );\n    expect(el.shadowRoot?.textContent).to.include('Header');\n  });\n\n  it('has name property', async () => {\n    const testPropName = 'selectableProperty';\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element name=\"${testPropName}\"></basic-list-element>`\n    );\n    expect(ble.name).to.equal(testPropName);\n    expect(ble.hasAttribute('name')).to.be.true;\n    expect(ble.getAttribute('name')).to.equal(testPropName);\n  });\n\n  it('shows light DOM children as selectable options', async () => {\n    const options: string[] = ['Option 1', 'Option 2', 'Option 3'];\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element label=\"List\">\n        ${options.map(op => html`<p>${op}</p>`)}\n      </basic-list-element>`\n    );\n\n    const renderedOptions: NodeListOf<HTMLLIElement> | undefined =\n      ble.shadowRoot?.querySelectorAll<HTMLLIElement>('li.item');\n    if (renderedOptions) {\n      expect(renderedOptions.length).to.equal(3);\n      options.forEach((opt, index) =>\n        expect(renderedOptions.item(index).textContent).to.contain(opt)\n      );\n    } else {\n      throw new Chai.AssertionError('Element failed to render shadow root');\n    }\n  });\n\n  it('replaces items, when slotted children change', async () => {\n    const varOptions: string[][] = [\n      ['Option 1', 'Option 2', 'Option 3'],\n      ['Option 4', 'Option 5'],\n    ];\n\n    const ble = async (items: TemplateResult | TemplateResult[]) =>\n      fixture<BasicListElement>(\n        html`<basic-list-element label=\"List\">${items}</basic-list-element>`\n      );\n\n    for (const variant of varOptions) {\n      // eslint-disable-next-line no-await-in-loop\n      const list = await ble(variant.map(opt => html`<p>${opt}</p>`));\n      list.items.forEach((item, index) => {\n        expect(item.textContent).to.contain(variant[index]);\n      });\n    }\n  });\n\n  it(\"fires 'items-changed' event upon slot changes\", async () => {\n    const varOptions: string[][] = [\n      ['Option 1', 'Option 2', 'Option 3'],\n      ['Option 4', 'Option 5'],\n    ];\n\n    const testEventHandler =\n      (variant: string[]) => (event: ItemsChangedEvent) => {\n        event.detail.items.forEach((item, index) => {\n          expect(item.textContent).to.contain(variant[index]);\n        });\n      };\n\n    const ble = async (items: string[]) =>\n      fixture<BasicListElement>(\n        html`<basic-list-element\n          @items-changed=${testEventHandler(items)}\n          label=\"List\"\n          >${repeat(items, opt => html`<p>${opt}</p>`)}</basic-list-element\n        >`\n      );\n\n    for (const variant of varOptions) {\n      // eslint-disable-next-line no-await-in-loop\n      await ble(variant);\n    }\n  });\n\n  it('selects option upon click', async () => {\n    const options: string[] = ['Option 1', 'Option 2', 'Option 3'];\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element label=\"List\">\n        ${options.map(op => html`<p>${op}</p>`)}\n      </basic-list-element>`\n    );\n    const renderedOptions: NodeListOf<HTMLLIElement> | undefined =\n      ble.shadowRoot?.querySelectorAll<HTMLLIElement>('li.item');\n    if (renderedOptions) {\n      const theItem = renderedOptions.item(0);\n      theItem.click();\n      await ble.updateComplete;\n      expect(theItem).to.have.attribute('selected');\n    } else {\n      throw new Chai.AssertionError('Element failed to render shadow root');\n    }\n  });\n\n  it('has multiple selection mode', async () => {\n    const options: string[] = ['Option 1', 'Option 2', 'Option 3'];\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element multiple label=\"List\">\n        ${options.map(op => html`<p>${op}</p>`)}\n      </basic-list-element>`\n    );\n    const renderedOptions: NodeListOf<HTMLLIElement> | undefined =\n      ble.shadowRoot?.querySelectorAll<HTMLLIElement>('li.item');\n    if (renderedOptions) {\n      const theItems = [renderedOptions.item(0), renderedOptions.item(2)];\n      theItems.forEach(i => i.click());\n      await ble.updateComplete;\n      theItems.forEach(i => expect(i).to.have.attribute('selected'));\n    } else {\n      throw new Chai.AssertionError('Element failed to render shadow root');\n    }\n  });\n\n  it('has getters to expose selected items, and indexes', async () => {\n    const options: string[] = ['Option 1', 'Option 2', 'Option 3'];\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element multiple label=\"List\">\n        ${options.map(op => html`<p>${op}</p>`)}\n      </basic-list-element>`\n    );\n    const renderedOptions: NodeListOf<HTMLLIElement> | undefined =\n      ble.shadowRoot?.querySelectorAll<HTMLLIElement>('li.item');\n    if (renderedOptions) {\n      const theItems = [renderedOptions.item(0), renderedOptions.item(2)];\n      theItems.forEach(i => i.click());\n      await ble.updateComplete;\n      expect(theItems.length).to.equal(ble.selected.length);\n      theItems.forEach(i => {\n        expect(ble.selected).to.include(i.children[0]);\n      });\n    } else {\n      throw new Chai.AssertionError('Element failed to render shadow root');\n    }\n  });\n\n  it('has setter to alow imperative setting selection', async () => {\n    const options: string[] = ['Option 1', 'Option 2', 'Option 3'];\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element multiple label=\"List\" .selectedIndexes=${[0, 2]}>\n        ${options.map(op => html`<p>${op}</p>`)}\n      </basic-list-element>`\n    );\n    const renderedOptions: NodeListOf<HTMLLIElement> | undefined =\n      ble.shadowRoot?.querySelectorAll<HTMLLIElement>('li.item');\n    if (renderedOptions) {\n      expect(renderedOptions.item(0)).to.have.attribute('selected');\n      expect(renderedOptions.item(2)).to.have.attribute('selected');\n    } else {\n      throw new Chai.AssertionError('Element failed to render shadow root');\n    }\n  });\n\n  it('fires event when select', async () => {\n    const options: string[] = ['Option 1', 'Option 2', 'Option 3'];\n    const selectIndexes = [0, 2];\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element multiple label=\"List\">\n        ${options.map(op => html`<p>${op}</p>`)}\n      </basic-list-element>`\n    );\n    const renderedOptions: NodeListOf<HTMLLIElement> | undefined =\n      ble.shadowRoot?.querySelectorAll<HTMLLIElement>('li.item');\n    if (renderedOptions) {\n      const theItems = selectIndexes.map(i => renderedOptions.item(i));\n      const capturedEvents = SpyOn<SelectionChangedEvent>(\n        ble,\n        500,\n        'selection-changed'\n      );\n      theItems.forEach(i => i.click());\n      await ble.updateComplete;\n      const events = (await capturedEvents).get('selection-changed');\n      if (events) {\n        expect(events.length).to.be.greaterThan(0);\n        const lastEvent = events.pop();\n        expect(lastEvent?.detail)\n          .to.haveOwnProperty('index')\n          .to.deep.equal(selectIndexes);\n      } else throw new Chai.AssertionError('No events have been fired');\n    } else {\n      throw new Chai.AssertionError('Element failed to render shadow root');\n    }\n  });\n\n  it('responds on keyboard navigation and selection', async () => {\n    const arrowDownEvent = new KeyboardEvent('keydown', {\n      key: 'ArrowDown',\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    });\n    const arrowUpEvent = new KeyboardEvent('keydown', {\n      key: 'ArrowUp',\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    });\n    const enterEvent = new KeyboardEvent('keydown', {\n      key: 'Enter',\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    });\n    const spaceEvent = new KeyboardEvent('keydown', {\n      key: ' ',\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    });\n\n    const options: string[] = ['Option 1', 'Option 2', 'Option 3'];\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element label=\"List\">\n        ${options.map(op => html`<p>${op}</p>`)}\n      </basic-list-element>`\n    );\n    const renderedOptions: NodeListOf<HTMLLIElement> | undefined =\n      ble.shadowRoot?.querySelectorAll<HTMLLIElement>('li.item');\n    if (renderedOptions) {\n      const theItem = renderedOptions.item(0);\n      theItem.focus();\n      await ble.updateComplete;\n      expect(\n        window.getComputedStyle(theItem).backgroundColor ===\n          'rgb(197, 243, 255)' ||\n          window.getComputedStyle(theItem).backgroundColor === '#c5f3ff'\n      ).to.be.true;\n      theItem.dispatchEvent(arrowDownEvent);\n      await ble.updateComplete;\n      expect(\n        window.getComputedStyle(renderedOptions.item(1)).backgroundColor ===\n          'rgb(197, 243, 255)' ||\n          window.getComputedStyle(renderedOptions.item(1)).backgroundColor ===\n            '#c5f3ff'\n      ).to.be.true;\n      renderedOptions.item(1).dispatchEvent(arrowUpEvent);\n      await ble.updateComplete;\n      expect(\n        window.getComputedStyle(renderedOptions.item(1)).backgroundColor\n      ).to.be.equal('rgba(0, 0, 0, 0)');\n      theItem.dispatchEvent(spaceEvent);\n      await ble.updateComplete;\n      expect(theItem).to.have.attribute('selected');\n      theItem.dispatchEvent(spaceEvent);\n      await ble.updateComplete;\n      expect(theItem.hasAttribute('selected')).to.be.false;\n      theItem.dispatchEvent(enterEvent);\n      await ble.updateComplete;\n      expect(theItem).to.have.attribute('selected');\n    } else {\n      throw new Chai.AssertionError('Element failed to render shadow root');\n    }\n  });\n\n  it('passes the a11y audit', async () => {\n    const options: string[] = ['Option 1', 'Option 2', 'Option 3'];\n    const ble = await fixture<BasicListElement>(\n      html`<basic-list-element label=\"List\">\n        ${options.map(op => html`<p>${op}</p>`)}\n      </basic-list-element>`\n    );\n\n    await expect(ble).shadowDom.to.be.accessible();\n  });\n});\n"]}