{"version":3,"file":"index.stories.js","sourceRoot":"","sources":["../../stories/index.stories.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-html';\nimport '../basic-list-element.js';\n\nconst opts = ['Option 1', 'Option 2', 'Option 3'];\n\nexport default {\n  title: 'BasicListElement',\n  component: 'basic-list-element',\n  argTypes: {\n    label: { control: 'text' },\n    name: { control: 'text' },\n    multiple: { control: 'boolean' },\n    mainColor: { control: 'color' },\n    secColor: { control: 'color' },\n    bgColor: { control: 'color' },\n    textColor: { control: 'color' },\n    borderColor: { control: 'color' },\n    selectionColor: { control: 'color' },\n    focusColor: { control: 'color' },\n  },\n  parameters: {\n    actions: {\n      handles: ['selection-changed'],\n    },\n  },\n};\n\ninterface Story<T> {\n  (args: T): TemplateResult;\n  args?: Partial<T>;\n  argTypes?: Record<string, unknown>;\n}\n\ninterface ArgTypes {\n  label?: string;\n  name?: string;\n  multiple?: boolean;\n  mainColor?: string;\n  secColor?: string;\n  bgColor?: string;\n  textColor?: string;\n  borderColor?: string;\n  selectionColor?: string;\n  focusColor?: string;\n  slot?: TemplateResult | TemplateResult[];\n}\n\nconst Template: Story<ArgTypes> = ({\n  label = 'Hello world',\n  name = 'list',\n  multiple = false,\n  mainColor = '#777',\n  secColor = '#f9f9f9',\n  bgColor = 'transparent',\n  textColor = mainColor,\n  borderColor = mainColor,\n  selectionColor = '#00ccff',\n  focusColor = '#c5f3ff',\n  slot,\n}: ArgTypes) => html`\n  <basic-list-element\n    style=\"--ble-main-color: ${mainColor};\n    --ble-secondary-color: ${secColor};\n    --ble-bg-color: ${bgColor};\n    --ble-text-color: ${textColor};\n    --ble-border-color: ${borderColor};\n    --ble-selection-color: ${selectionColor};\n    --ble-focus-color: ${focusColor}\"\n    .label=${label}\n    .name=${name}\n    ?multiple=${multiple}\n  >\n    ${slot}\n  </basic-list-element>\n`;\n\nexport const Regular = Template.bind({});\n\nexport const CustomLabel = Template.bind({});\nCustomLabel.args = {\n  label: 'My label',\n};\n\nexport const CustomName = Template.bind({});\nCustomName.args = {\n  label: 'My Label',\n  name: 'boo',\n};\n\nexport const SlottedContent = Template.bind({});\nSlottedContent.args = {\n  slot: opts.map(op => html`<p>${op}</p>`),\n};\n\nSlottedContent.argTypes = {\n  slot: { table: { disable: true } },\n};\n\nexport const CustomStyling = Template.bind({});\nCustomStyling.args = {\n  ...SlottedContent.args,\n  mainColor: 'black',\n  secColor: 'pink',\n  bgColor: 'green',\n  textColor: 'red',\n  borderColor: 'yellow',\n  selectionColor: 'white',\n  focusColor: 'blue',\n};\n\nCustomStyling.argTypes = {\n  slot: { table: { disable: true } },\n};\n"]}